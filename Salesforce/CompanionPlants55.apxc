public class CompanionPlants55 {
    /*
    Some plants are considered companion plants. They grow better when planted next to each other. For the purpose of this problem, we consider the following plants to be companions: lettuce and cucumbers, lettuce and onions, onions and carrots, and onions and tomatoes. The same plants planted next to each other are not considered companions.
    Write a function isCompanion that takes as input a list of plants being planted in a row. Return true only if every plant in the list is planted next to a companion and return false otherwise.
    companionPlants(new List { 'onions', 'lettuce', 'onions', 'carrots', 'onions', 'lettuce', 'cucumbers'}) = true
    companionPlants(new List { 'lettuce', 'onions', 'carrots', 'lettuce', 'cucumbers'}) = false. We have non-companion plants carrots and lettuce planted together
    Hint: Loop over elements 0 to size-1, and for each iteration determine if the current element and the next element are companions
    Hint: Try determining if a pair being examined are companions using the following if/else logic: if the first plant is onions, the second should be lettuce, carrots, or tomatoes. If the first plant is lettuce, then the second should be cucumbers or onions. If the first plant is cucumbers, the second should be lettuce. If the first plant is carrots, the second should be onions. If the first plant is tomatoes, the second should be onions. If none of the above match, the plants are not companions.
    */
    public Boolean companionPlants(List<String> plants) {
        if (plants.isEmpty()) {
            return true;
        }
        if (plants.size() == 1) {
            return false;
        }
    
        Map<String, Set<String>> companionMap = new Map<String, Set<String>>{
            'onions' => new Set<String>{'lettuce', 'carrots', 'tomatoes'},
            'lettuce' => new Set<String>{'cucumbers', 'onions'},
            'cucumbers' => new Set<String>{'lettuce'},
            'carrots' => new Set<String>{'onions'},
            'tomatoes' => new Set<String>{'onions'}
        };
        
        for (Integer i = 0; i < plants.size() - 1; i++) {
            String currentPlant = plants[i];
            String nextPlant = plants[i+1];
            
            if (!companionMap.containsKey(currentPlant) || !companionMap.get(currentPlant).contains(nextPlant)) {
                return false;
            }
        }   
        return true;
    }    
}