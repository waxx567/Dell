public class ReverseWordsInString {
    /*
    Given a string that contains a sequence of words separated by spaces, write a method that reverses the order of the characters in each word.
    You must maintain white space and the order of the words.
    Example 1:
    Input: lets learn apex strings
    Output: stel nrael xepa sgnirts
    Example 2:
    Input: DSA is fun
    Output: ASD si nuf
    Hint: Use spaces as delimiters. You can use String.split(' ') to convert a String into a list of Strings separated by space, and use the String.join method to join them back into a single string.
    Hint: In order to build your problem-solving skills, avoid the String.reverse() method.
    Converting a string into a list of characters will make this easy. String.getChars() returns a list of integers where each integer represents a character in the string. String.fromCharArray(str) converts a list of integers into a string. Take a look at an ASCII table to see what the integer values for different characters are.
    Hint: Think of a two-pointer solution when reversing an individual word.
    Hint: For even more challenge and a more efficient solution, avoid splitting by space. Convert the entire string into an array of integers, manipulate the array, and convert it back into a String.
    */
    public static String reverseWords(String str){
        // Split the input string into a list of individual words
        String[] words = str.split(' ');
        // Create a new list to hold string values of reversed words
        List<String> reversedWords = new List<String>();
        // Loop through the words list
        for (String word:words) {
            // Create a new list to hold ASCII values of reversed characters
            List<Integer> reversedCharInts = new List<Integer>();
            // Reverse the words and add them to ASCII list
            for (Integer i = word.length() - 1; i >= 0; i--) {
                reversedCharInts.add(word.charAt(i));
            }
            // Convert the ASCIIs back to characters and add them to the reversedWords list
            String reversedWord = String.fromCharArray(reversedCharInts);
            reversedWords.add(reversedWord);
        }
        // Join the words in the list into a single string with spaces, and return the result
        return String.join(reversedWords, ' ');
    }
}