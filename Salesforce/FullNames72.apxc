public class FullNames72 {
    /*
    Implement the method fullNames that takes as input two equal-sized lists of strings firstNames and lastNames, and returns a new list containing full names, with each full name generated by the concatenating the first name and last name at the corresponding location in the input lists.
    Given the following test code:
    List<String> firstNames = new List<String> { 'John', 'Jane' };
    List<String> lastNames = new List<String> { 'Doe', 'Smith' };
    List<String> result = fullNames(firstNames, lastNames);
    The expressions result[0] == 'John Doe', result[1] == 'Jane Smith', and result.size() == 2 should be true. In addition, the two input arrays should be unmodified
    Hint: Use new List() to create a new empty list and use the add(listElement) method to add new elements into the list. Refer to documentation for the List class.
    Hint: After creating an empty list, loop over one of the input lists using for (Integer i=0; i<firstNames.size(); i++). Obtain the first name and last name at index i from the input lists, concatenate them using the + operator with a space in between, and add them to the newly created list. Finally, return the list.
    */ 
    public List<String> fullNames(List<String> firstNames, List<String> lastNames) {
        List<String> fullNamesList = new List<String>();
        if (firstNames.isEmpty() || lastNames.isEmpty()) {
            return fullNamesList;
        } else {
            for (Integer i = 0; i < firstNames.size(); i++) {
                fullNamesList.add(firstNames[i] + ' ' + lastNames[i]);
            }
            return fullNamesList;
        }
    }
}