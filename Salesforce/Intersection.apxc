public class Intersection {
    /*
    Apex #77
    An intersection between two sets A and B is a set that contains all elements present in both A and B. For example, the intersection of sets {1, 5, 10} and {1, 3, 5} is {1, 5}, since 1 and 5 are the only two elements present in both sets.
    Implement the method setIntersection that takes as input two sets of integers set1 and set2 and returns the intersection of the two sets. The method should not modify the original sets.
    Given the following test code:
    Set<Integer> set1 = new Set<Integer> {1, 2, 3};
    Set<Integer> set2 = new Set<Integer> {4, 3, 2};
    Set<Integer> set3 = setUnion(set1, set2);
    The set set3 contains the numbers 2 and 3.
    Hint: Consider using the contains and add methods defined on the Set class. See docs for the Set class for details.
    Hint: Start by creating a new Set. Loop over all elements in set1, and add each element into the new set only if the element is also present in set2.
    Hint: You can also clone one of the sets and use the retainAll method to retain only the elements present in the second set.
    */
    public Set<Integer> setIntersection(Set<Integer> set1, Set<Integer> set2) {
        Set<Integer> intersectionSet = new Set<Integer>();
        // Null checks return an empty set
        if (set1.isEmpty() || set2.isEmpty()) {
            return intersectionSet;
        }
        // Loop through set1 checking against set2
        for (Integer i : set1) {
            if (set2.contains(i) == true) {
                // Add matched integer found to intersection set
                Boolean result = intersectionSet.add(i);
            }
        }
        return intersectionSet;
    }
}