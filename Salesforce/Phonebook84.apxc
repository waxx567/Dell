public class Phonebook84 {
    /*
    Implement the method phonebook that takes as input a list of Contacts, and returns a Map containing the full names as keys, and the contact's phone number as values. Do not include contacts without a phone number into the phonebook.
    For example, given the following contacts:
    c1
    Name: 'Bryan McCartney'
    Phone: '2143452398'
    c2
    Name: 'Janice Gonzalez'
    Phone: '6923849837'
    The method call phonebook(new List {c1, c2}) should return a map containing the following key/value pairs:
    'Bryan McCartney' -> '2143452398'
    'Janice Gonzalez' -> '6923849837'
    Hint: The put method in the Map class allows you to add a key/value pair to a map.
    Hint: Declare a new variable of type Map. Loop over the contact list and use the put method to each each key/value pair into the map, provided the Contact's Phone is not null. Finally, return the map.
    */
    public Map<String, String> phonebook(List<Contact> contacts) {

        Map<String, String> contactMap = new Map<String, String>();
        
        for (Contact contact : contacts) {
            if (contact.Phone != null) {
                contactMap.put(contact.Name, contact.Phone);
            } else if (contact.Phone != null) {
                return new Map<String, String>();
            }
        }
    
        return contactMap;
    }
}