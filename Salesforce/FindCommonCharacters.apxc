public class FindCommonCharacters {
    /*
    Apex practice problem #118
    Given list of strings: strs, implement a method that will return all the common characters in the list. The character should be repeated in the list according the minimum frequency that it occurs in the list. The input will only consist of lower case letters in the English alphabet.
    Example 1
    input: strs = ['cook', 'lock', 'cool,]
    output: ['c', 'o'];
    input: strs = ['bella', 'label', 'roller']
    output: ['e', 'l', 'l'];
    Hint: Try solving with two maps
    Hint: Convert the string to ASCII using the getChars() method to make it easier to solve. Refer to www.asciitable.com to understand what Integer is which character.
    */
    public List<String> commonChars(List<String> strs){
        // 1. Map to store the frequency of characters in the first string
        Map<String, Integer> mainMap = new Map<String, Integer>();

        // Process the first string
        String firstStr = strs[0];
        for (Integer i = 0; i < firstStr.length(); i++) {
            String ch = firstStr.substring(i, i + 1); // Get each character as a String
            if (!mainMap.containsKey(ch)) {
                mainMap.put(ch, 1); // First occurrence
            } else {
                mainMap.put(ch, mainMap.get(ch) + 1); // Increment count
            }
        }

        // Process remaining strings
        for (Integer i = 1; i < strs.size(); i++) {
            Map<String, Integer> tempMap = new Map<String, Integer>();
            String currentStr = strs[i];
            for (Integer j = 0; j < currentStr.length(); j++) {
                String ch = currentStr.substring(j, j + 1);
                if (!tempMap.containsKey(ch)) {
                    tempMap.put(ch, 1);
                } else {
                    tempMap.put(ch, tempMap.get(ch) + 1);
                }
            }

            // Update mainMap to keep the minimum frequency of each character
            for (String key : mainMap.keySet()) {
                if (tempMap.containsKey(key)) {
                    mainMap.put(key, Math.min(mainMap.get(key), tempMap.get(key)));
                } else {
                    mainMap.put(key, 0); // Character not found, set count to 0
                }
            }
        }

        // Build the result based on mainMap
        List<String> result = new List<String>();
        for (String key : mainMap.keySet()) {
            Integer freq = mainMap.get(key);
            for (Integer k = 0; k < freq; k++) {
                result.add(key);
            }
        }

        return result;
    }
}