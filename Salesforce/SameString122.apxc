public class SameString122 {
    /*
    Apex practice problem #122
    Given two strings containing backspaces identified with '#', return true if the strings are the same after applying the backspaces.
    Example 1
    String str1 = 'xy#z';
    String str2 = 'xyz#';
    Boolean result = sameString(str1, str2);
    result == false because the strings evaluate to xz and xy after the back spaces are applied.
    Example 2
    String str1 = 'ab#c';
    String str2 = 'ac';
    Boolean result = sameString(str1, str2);
    result == true because the strings evaluate to ac and ac after the backspaces are applied.
    Hint: Try working from the right of the string
    Hint: Think of using a two pointer solution
    Hint: What if there is more than one back space in a row?
    Hint: String algo tutorial https://www.youtube.com/watch?v=Qe5ZcxiRZts

    Plan:
    1. Start from the end of both strings.
    2. Use two pointers, one for each string, and move leftward.
    3. Whenever you encounter a backspace ('#'), count how many characters to skip, and move the pointer accordingly.
    4. Compare the current characters once both pointers land on valid characters.
    5. If the strings differ at any valid position, return false; otherwise, if all characters match, return true.
    */
    public static Boolean sameString(String str1, String str2){
        Integer p1 = str1.length() - 1; // Pointer for str1
        Integer p2 = str2.length() - 1; // Poimter for str2

        while (p1 >= 0 || p2 >= 0) {
            // Process backspaces in str1
            Integer skip1 = 0;
            while (p1 >= 0) {
                if (condition) {
                    
                }
            }
        }
    }
}