public class convert {

    public static String convert15to18DigitId(String fifteenDigit) {
        // Validate input
        if (fifteenDigit == null || fifteenDigit.length() != 15) {
            return '-1';
        }

        Map<String,String> allCharacters = new Map<String,String>{};
        allCharacters.put('000000', 'A');
        allCharacters.put('000001', 'B');
        allCharacters.put('000010', 'C');
        allCharacters.put('000011', 'D');
        allCharacters.put('000100', 'E');
        allCharacters.put('000101', 'F');
        allCharacters.put('000110', 'G');
        allCharacters.put('000111', 'H');
        allCharacters.put('001000', 'I');
        allCharacters.put('001001', 'J');
        allCharacters.put('001010', 'K');
        allCharacters.put('001011', 'L');
        allCharacters.put('001100', 'M');
        allCharacters.put('001101', 'N');
        allCharacters.put('001110', 'O');
        allCharacters.put('001111', 'P');
        allCharacters.put('010000', 'Q');
        allCharacters.put('010001', 'R');
        allCharacters.put('010010', 'S');
        allCharacters.put('010011', 'T');
        allCharacters.put('010100', 'U');
        allCharacters.put('010101', 'V');
        allCharacters.put('010110', 'W');
        allCharacters.put('010111', 'X');
        allCharacters.put('011000', 'Y');
        allCharacters.put('011001', 'Z');
        allCharacters.put('011010', '0');
        allCharacters.put('011011', '1');
        allCharacters.put('011100', '2');
        allCharacters.put('011101', '3');
        allCharacters.put('011110', '4');
        allCharacters.put('011111', '5');

        List<String> segments = new List<String>();
        String firstSegment = fifteenDigit.substring(0, 5);
        String middleSegment = fifteenDigit.substring(5, 10);
        String lastSegment = fifteenDigit.substring(10, 15);
        segments.add(firstSegment);
        segments.add(middleSegment);
        segments.add(lastSegment);
        
        System.debug('Segments list: ' + segments);

        // Handle firstSegment
        String[] firstChars = firstSegment.split('');
        System.debug('firstChars: ' + firstChars); 
        String firstBinaryString = '';
        // Loop over first segment character list
        for (String f : firstChars) {
            if (f.isNumeric() || f.isAllLowerCase()) {
                firstBinaryString += '0';
            }
            else {
                firstBinaryString += '1';
            }
        }
        System.debug('firstBinaryString: ' + firstBinaryString);
        String firstSuffix = allCharacters.get(firstBinaryString);
        System.debug('firstSuffix: ' + firstSuffix); 

        // Handle middleSegment
        String[] middleChars = middleSegment.split('');
        System.debug('middleChars: ' + middleChars); 
        String middleBinaryString = '';
        // Loop over middle segment character list
        for (String m : middleChars) {
            if (m.isNumeric() || m.isAllLowerCase()) {
                middleBinaryString += '0';
            }
            else {
                middleBinaryString += '1';
            }
        }
        System.debug('middleBinaryString: ' + middleBinaryString);
        String middleSuffix = allCharacters.get(middleBinaryString);
        System.debug('middleSuffix: ' + middleSuffix);


        // Handle lastSegment
        String[] lastChars = lastSegment.split('');
        System.debug('lastChars: ' + lastChars); 
        String lastBinaryString = '';
        // Loop over last segment character list
        for (String l : lastChars) {
            if (l.isNumeric() || l.isAllLowerCase()) {
                lastBinaryString += '0';
            }
            else {
                lastBinaryString += '1';
            }
        }
        System.debug('lastBinaryString: ' + lastBinaryString);
        String lastSuffix = allCharacters.get(lastBinaryString);
        System.debug('lastSuffix: ' + lastSuffix);

        return fifteenDigit;
    }
}