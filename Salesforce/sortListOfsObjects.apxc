public class sortListOfsObjects {
    // Implement the method getAccounts(), function, which accepts a list of accounts as input and returns a new list of accounts sorted in descending order based on the Annual Revenue field.
    public List<Account> getAccounts(List<Account> accounts) {
        // Create a list of AccountWrapper objects
        List<AccountWrapper> wrappedAccounts = new List<AccountWrapper>();

        // Wrap each account in the AccountWrapper
        for (Account acc : accounts) {
            wrappedAccounts.add(AccountWrapper(acc));
        }
    }
    // Wrapper class 
    public class AccountWrapper implements Comparable {
        public Account account;

        // Constructor to initialize the wrapper with the Account object
        public AccountWrapper(Account acc) {
            this.account = acc;
        }

        // Implement the compareTo method for sorting
        public Integer compareTo(Object compareToObject) {
            AccountWrapper compareToWrapper = (AccountWrapper) compareToWrapper;

            // Compare Annual Revenue in descending order
            if (this.account.AnnualRevenue < compareToWrapper.account.AnnualRevenue) {
                return -1;
            } else if (this.account.AnnualRevenue > compareToWrapper.account.AnnualRevenue) {
                return 1;
            }  else {
                return 0;
            }
        }
    }
}