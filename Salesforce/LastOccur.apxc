public class LastOccur {
    /*
    Find the last occurrence of Integer target in a list of integers nums and return its index. If the target is not found, return -1
    For instance, in the list of integers {4, 6, 1, 9, 7, 9, 2}, the function would return index 0 for the target 4, index 5 for target 9 (occurs twice), and -1 for target 3 (not found).
    Hint:   Given nums = new List{5, 2, 8, -4, 8, 1, 11};
            findLast(nums, 12) => -1
            findLast(nums, 8) => 4
            findLast(nums, 11) => 6
            findLast(nums, -4) => 3 
    Hint: Use a for loop to loop over the list of integers, and use an integer variable to store the index.
    Hint: Inside the loop, use an if statement to check if the current value matches target. Store the index if it matches.
    */
    public static Integer findLast(List<Integer> nums, Integer target) {
        Integer lastOccurence = -1;
        for (Integer i = 0; i < nums.size(); i++) {
            if (nums[i] == target) {
                lastOccurence = i;
             }
         }
         return lastOccurence;
     }
}