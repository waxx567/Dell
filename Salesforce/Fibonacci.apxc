public class Fibonacci {
    /*
    Apex practice problems #69
    The first two numbers in the fibonacci sequence are 1, and all other numbers in the sequence are defined as the sum of the two preceding fibonacci numbers. The first 10 numbers in the fibonacci sequence are 1, 1, 2, 3, 5, 8, 13, 21, 34, and 55.
    Given a non-zero positive integer n, return a list of integers of size n containing (in correct order) the first n numbers in the fibonacci series.
    Example: fibonacciSeries(5) returns a list containing the numbers 1, 1, 2, 3, and 5.
    Hint: Use the add method to add items to a new list
    Hint: For n > 2, start with a list of first two fibinacci numbers, and use a loop to fill out the remaining series.
    */
    public List<Integer> fibonacciSeries(Integer n) {
        List<Integer> nFibonacci = new List<Integer>();
        if (n == 1) {
            nFibonacci.add(1);
        }
        if (n == 2) {
            nFibonacci.add(1);
            nFibonacci.add(1);
        }
        if (n > 2) {
            nFibonacci.add(1);
            nFibonacci.add(1);
            Integer numberToAdd = 0;
            for (Integer i = 2; i < n; i++) {
                numberToAdd = nFibonacci[i-1] + nFibonacci[i-2];
                nFibonacci.add(numberToAdd);
            }
        }
        return nFibonacci;
    }
}